{"version":3,"sources":["decorators.ts"],"names":[],"mappings":";;AAAA,2CAAyC;AAEzC,mBAAmB,MAAc,EAAE,WAAmB,EAAE,UAAwC;IAC5F,IAAI,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC;IAEhC,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IAExC,UAAU,CAAC,KAAK,GAAG;QAAS,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACtC,MAAM,CAAC,KAAK,CAAC,YAAU,IAAI,CAAC,WAAW,CAAC,IAAI,SAAI,WAAa,CAAC,CAAC;QAE/D,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;AACN,CAAC;AAEQ,8BAAS","file":"decorators.js","sourcesContent":["import { JSWLogger } from \"./JSW-Logger\";\n\nfunction LogMethod(target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) {\n    let logger = JSWLogger.instance;\n    \n    const originalMethod = descriptor.value;\n    \n    descriptor.value = function(...args: any[]) {\n        logger.debug(`Within ${this.constructor.name}#${propertyKey}`);\n        \n        return originalMethod.apply(this, args);\n    };\n}\n\nexport { LogMethod }"]}