{"version":3,"sources":["JSW-Logger.ts"],"names":[],"mappings":"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","file":"JSW-Logger.js","sourcesContent":["\"use strict\";\n\nimport * as _ from \"lodash\";\nimport * as Symbol from \"es6-symbol\";\nimport { Options } from \"./Options\";\n    \nconst TRANSPORT_PREFIX = \"EAMP_LOGGER\";\n\n// Singleton instance\nconst singleton = Symbol();\nconst singletonEnforcer = Symbol();\n\nconst LEVELS = {\n    \"silly\":    6,\n    \"debug\":    5,\n    \"verbose\":  4,\n    \"log\":      3,\n    \"info\":     2,\n    \"warn\":     1,\n    \"error\":    0\n};\n\nconst LEVELS_STR = [\"ERROR\", \"WARN\", \"INFO\", \"LOG\", \"VERBOSE\", \"DEBUG\", \"SILLY\"];\n\nfunction interpolate(string, values) {\n    var str = string;\n    var i = 0;\n    \n    while (str.match(/%./)) {\n        var match = str.match(/%./)[0];\n    \n        if (match.toLowerCase() === \"%s\") {\n            str = str.replace(match, \"\" + values[i]);\n        } else if (match.toLowerCase() === \"%d\") {\n            str = str.replace(match, +values[i]);\n        }\n    \n        i++;\n    }\n\n    return str;\n}\n\n// function ensureFile(file, cb) {\n//     fs.exists(file, exists => {\n//         if (!exists) {\n//             fs.writeFile(file, \"\", err => {\n//                 cb(err);\n//             });\n//         } else {\n//             cb(null);\n//         }\n//     });\n// }\n\n/**\n * JSWLogger\n * \n * @module JSWLogger\n * @since 0.0.1\n * @author Eduardo Astolfi <eastolfi91@gmail.com>\n * @copyright 2016 Eduardo Astolfi <eastolfi91@gmail.com>\n * @license MIT Licensed\n * \n * @classdesc Logging module singleton which writes in the console all warnings and erros\n */\nclass JSWLogger {\n    private options: Options = new Options();\n    \n    constructor(enforcer:Symbol, options:Object = {}) {\n        if(enforcer !== singletonEnforcer) throw new Error(\"Cannot construct singleton\");\n        \n        // super({\n        //     transports: [\n        //         new winston.transports.Console({\n        //             name: `${TRANSPORT_PREFIX}_debug-console`,\n        //             level: \"error\"\n        //         })\n        //     ]\n        // });\n        \n        //this.options = _.assign({}, this.options, options);\n        this.options = new Options(options);\n        \n        // Ensuring that the log file exists\n        // let handledExceptionsLogPath = path.resolve(__dirname + defaultOptions.handledExceptionsLogPath);\n        \n        // ensureFile(handledExceptionsLogPath, error => {\n        //     if (error) throw new Error(error);\n            \n        //     this.logger = new winston.Logger({\n        //         transports: [\n        //             new winston.transports.File({\n        //                 name: `${TRANSPORT_PREFIX}_exception-file`,\n        //                 filename: handledExceptionsLogPath,\n        //                 level: \"error\",\n        //                 json: false,\n        //                 colorize: true\n        //             })\n        //         ]\n        //     });\n            \n        //     if (options.hideAllLogs) {\n        //         this.remove(`${TRANSPORT_PREFIX}_debug-console`);\n        //         this.logger.remove(`${TRANSPORT_PREFIX}_exception-file`);\n        //     }\n        // });\n    }\n    \n    private __log(level, message:string, options:Array<string|number> = []) {\n        if (_.isNil(level) || _.isNil(message)) {\n            throw new Error(\"Call not allowed: Missing parameters\");\n        }\n        \n        if (_.isNaN(_.toNumber(level))) {\n            level = _.isNil(LEVELS[level]) ? LEVELS.log : LEVELS[level];\n        } else {\n            level = +level;\n        }\n        \n        if (options.length > 0) {\n            message = interpolate(message, options);\n        }\n        \n        let logMethod = console.log;\n        \n        // If level is lower than 0, that means we dont log anything\n        if (level >= 0) {\n            if (level === 0) {          // Error\n                if (console.error) logMethod = console.error;\n            } else if (level === 1) {   // Warning\n                if (console.warn) logMethod = console.warn;\n            } else if (level === 2) {   // Information\n                if (console.info) logMethod = console.info;\n            }\n        }\n        \n        if (this.options.hideLevelLog) {\n            message = `${message}`;\n        } else {\n            message = `${LEVELS_STR[level]}: ${message}`;\n        }\n        \n        if (level <= this.options.level) {\n            if (!this.options.hideAllLogs) {\n                logMethod(message);\n            }\n            \n            return message;\n        } else {\n            return false;\n        }\n    }\n    \n    silly(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.silly, message || \"\", options);\n    }\n    debug(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.debug, message || \"\", options);\n    }\n    verbose(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.verbose, message || \"\", options);\n    }\n    log(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.log, message || \"\", options);\n    }\n    info(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.info, message || \"\", options);\n    }\n    inform(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.info, message || \"\", options);\n    }\n    information(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.info, message || \"\", options);\n    }\n    warn(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.warn, message || \"\", options);\n    }\n    warning(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.warn, message || \"\", options);\n    }\n    error(message:string, ...options:Array<string|number>) {\n        return this.__log(LEVELS.error, message || \"\", options);\n    }\n    print(level:string|number, message:string, ...options:Array<string|number>) {\n        if (_.isNil(message) || _.isArray(message)) {\n            options = <any[]>(message || []);\n            message = <string>level;\n            level = <number>LEVELS.log;\n        }\n        \n        return this.__log(level, message || \"\", options);\n    }\n    \n    /**\n     * Method to throw a controlled exception, logging it to a log file.\n     * \n     * @method JSWLogger#throw\n     * \n     * @param {Error|string} error - The exception or message to be thrown.\n     * @param {Boolean} [throwError=true] - Same as JSWLogger->options->throwError\n     */\n    throw(error:Error|string, ...options:Array<string|number>) {\n        \n        if (_.isString(error)) {\n            let message = interpolate(<string>error, options);\n            \n            error = new Error(message);\n        }\n        \n        if (this.options.throwError) {\n            throw error;\n        } else {\n            return this.error((<Error>error).message);\n        }\n    }\n    \n    /**\n     * Retrieves the current singleton instance, creating a new one if needed.\n     * \n     * @static\n     * \n     * @returns {JSWLogger} this - The singleton Instance\n     */\n    static get instance():JSWLogger {\n        if (_.isNil(this[singleton])) {\n            this[singleton] = new JSWLogger(singletonEnforcer);\n        }\n        \n        return this[singleton];\n        \n    }\n    \n    /**\n     * Retrieves the current singleton instance, creating a new one if needed. \n     * It allows, when creating the first time, a set of options. Otherwise, it will return the singleton instance\n     * \n     * @static\n     * \n     * @param {Object} [options] - Additional options. See {@link JSWLogger#constructor}\n     * \n     * @returns {JSWLogger} this - The singleton Instance\n     */\n    static getInstance(options:Object):JSWLogger {\n        if (_.isNil(this[singleton])) {\n            this[singleton] = new JSWLogger(singletonEnforcer, options);\n        } else {\n            JSWLogger.instance.error(\"Singleton already instanciated. Ignoring options and retrieving current instance.\");\n        }\n        \n        return JSWLogger.instance;\n    }\n    \n    /**\n     * Destroy the current singleton instance\n     * \n     * @static\n     */\n    static __dropInstance():void {\n        delete this[singleton];\n    }\n}\n\nexport { JSWLogger };\n\n// module.exports = Logger;\n// export = Logger;"]}