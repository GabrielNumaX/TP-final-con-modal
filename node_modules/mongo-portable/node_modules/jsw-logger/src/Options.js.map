{"version":3,"sources":["Options.ts"],"names":[],"mappings":";;AAAA,0BAA4B;AAE5B;;;;;;;;;GASG;AACH;IAeI,iBAAY,OAAa;QARjB,qBAAgB,GAAG;YACvB,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,KAAK;YAClB,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE,IAAI;YAChB,wBAAwB,EAAE,+BAA+B;SAC5D,CAAC;QAGE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,GAAG,EAAE,CAAA;QAChB,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAChH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACpH,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAC5G,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAO,CAAC,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IAC3J,CAAC;IACL,cAAC;AAAD,CA1BA,AA0BC,IAAA;AAEQ,0BAAO","file":"Options.js","sourcesContent":["import * as _ from \"lodash\";\n\n/**\n * Options\n * \n * @since 1.2.0\n * @author Eduardo Astolfi <eastolfi91@gmail.com>\n * @copyright 2017 Eduardo Astolfi <eastolfi91@gmail.com>\n * @license MIT Licensed\n * \n * @classdesc Option class ensuring the configuration\n */\nclass Options {\n    public level: number;                          // logging info, warn and error by default\n    public hideAllLogs: boolean;\n    public hideLevelLog: boolean;\n    public throwError: boolean;\n    public handledExceptionsLogPath: string;\n    \n    private __defaultOptions = {\n        level: 2,\n        hideAllLogs: false,\n        hideLevelLog: false,\n        throwError: true,\n        handledExceptionsLogPath: \"/../logs/handledException.log\"\n    };\n    \n    constructor(options?: any) {\n        if (_.isNil(options)) {\n            options = {}\n        }\n        \n        this.level = ((options.level != null) ? options.level : this.__defaultOptions.level);\n        this.hideAllLogs = (_.isBoolean(options.hideAllLogs) ? options.hideAllLogs : this.__defaultOptions.hideAllLogs);\n        this.hideLevelLog = (_.isBoolean(options.hideLevelLog) ? options.hideLevelLog : this.__defaultOptions.hideLevelLog);\n        this.throwError = (_.isBoolean(options.throwError) ? options.throwError : this.__defaultOptions.throwError);\n        this.handledExceptionsLogPath = (options.handledExceptionsLogPath ? options.handledExceptionsLogPath : this.__defaultOptions.handledExceptionsLogPath);\n    }\n}\n\nexport { Options };"]}